http://webpy.org/cookbook/helloworld.zh-cn
http://127.0.0.1:8080/f_org_acc


#!/usr/bin/env python3
# -*- coding: utf-8 -*-


输出
	print('hello,world!')
	print('one','two','three')

输入
	name = input()
	name = input('please enter your name: ')

与，或，非
	True and True
	True or False
	not True

空值
	None

字符串
	ord('中')	获取单个字符的编码
	len('ABC')	字符串长度
	int(str)	字符串转换为整数，非法报错
	a = 'abc'
	str.replace('a', 'A')	字符串替换

字符串替换
	%d[整数] %f[浮点数] %s[字符串] %x[十进制整数]
	>>>'Hello, %s' % 'world'
	'Hello, world'
	>>>'Hi, %s, you have $%d.' % ('Michael', 1000000)
	'Hi, Michael, you have $1000000.'
	>>>'%2d-%02d' % (3, 1)
	' 3-01'
	>>>'growth rate: %d %%' % 7
	'growth rate: 7 %'

列表list
	list = ['Michael', 'Jack', 'Bob', 'Tracy']
	len(list)
	list[0]
	list[-1]
	list.append('Adam')	添加元素至末尾
	list.insert(1, 'Jack')	将元素插入到指定位置
	list.pop()		删除末尾元素
	list.pop(1)		删除指定元素
	list.sort()		列表排序

元组tuple
	tuple = (0,)
	tuple = ('Michael', 'Jack', 'Bob', 'Tracy')
	元组值不可改变，不可增减

条件判断
	if age >= 19:
		print(1)
	elif age >=30:
		print(2)
	else:
		print(0)

循环
	names = ['Michael', 'Bob', 'Tracy']
	for name in names:
		print(name)
	for x in range(101):
		sum = sum + x
	sum = 0
	while n > 0:
		sum = sum + 1

键值对dict
	dict = {'Michael': 95, 'Bob': 75, 'Rracy': 85}
	dict['Michael']
	'Michael' in dict	判断key是否存在
	dict.get('Michael')	不存在返回None
	dict.get('Michael', -1)	不存在返回-1
	dict.pop(key)		删除key和对应的value

set和dict相似，但只有key
	s = set([1,2,3])
	set是无序的，不重复的,值不能是list
	s.add(4)	添加元素
	s.remove(4)	删除元素

函数
	def nop():		# pass什么都不做
		pass
	def my_abs(x):
		if x >= 0:
			return x
		else:
			return -x
	def my_abs(x=0):	# 默认参数
		pass

函数参数
	def power(x):		# 必选参数
		pass
	def power(n=2):		# 默认参数，不写默认2
		pass
	nums = [1, 2, 3]	# 可变参数fun(*(1,2,3))
	def power(*nums):
		sum = 0
		for n in nums:
			sum = sum + n
		return sum
	# 命名关键字参数
	def person(name, age, *, city='Beijing', job):
		print(name, age, city, job)
	person('Jack', 23, job='Engineer')
	Jack 23 Beijing Engineer
	# 关键字参数fun(**('a': 1, 'b': 2})
        extra = {'city': 'Beijing', 'job': 'Engineer'
        def person(name, age, **kw):
                # 检查是否含有city参数 
                if 'city' in kw: 
                        pass
                print('name:', name, 'age:', age, 'other:', kw)
        person('Jack', 23, **extra)
        name: Jack age: 23ther: {'city': 'Beijing', 'job': 'Engineer'}





方法
	isinstance(x, (int, float)) 检查数据类型
	raise TypeError('bad operand type') 抛出错误




切片
	str = 'abcdef'
	L = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9]
	L[:]	# 复制一个lsit
	L[:3]	# [0, 1, 2]
	L[1:3]	# [1, 2]
	L[-2:]	# [8, 9]
	L[::5]	# [0, 5] 所有的，每5个取一个

迭代
	# 判断是否可迭代
	from collections import Iterable
	isinstance('abc', Iterable)
	# 迭代list
	d = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9] 
	for n in d:
		print(n)
	# 迭代map
	d = {'a':1, 'b':2, 'c':3}
	for key in d:		# 迭代key
		print(key)
	for value in d.values():# 迭代value
		print(value)
	# 迭代字符串
	d = 'abcde'
	for ch in d:
		print(ch)

列表生成器
	L = [x*x for x in range(1, 11)]
	L = [x*x for x in range(1, 11) if x%2==0]
	L = [m+n for m in 'ABC' for n in 'XYZ']
	d = {'x':'A', 'y':'B', 'z':'C'}
	[k+'='+v for k,v in d.items()]  # ['y=B', 'x=A', 'z=C']
	L = [x*x if x%2==0 else x for x in range(1, 13)]
